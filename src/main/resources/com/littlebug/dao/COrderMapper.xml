<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.littlebug.dao.COrderMapper">
  <resultMap id="BaseResultMap" type="com.littlebug.bean.COrder">
    <id column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="custom_id" jdbcType="VARCHAR" property="customId" />
    <result column="product_id" jdbcType="VARCHAR" property="productId" />
    <result column="order_date" jdbcType="TIMESTAMP" property="orderDate" />
    <result column="request_date" jdbcType="TIMESTAMP" property="requestDate" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="order_image" jdbcType="VARCHAR" property="image" />
    <result column="file" jdbcType="VARCHAR" property="file" />
    <result column="status" jdbcType="INTEGER" property="status" />
      <association property="custom" resultMap="customMap"/>
      <association property="product" resultMap="productMap"/>
  </resultMap>

    <resultMap id="productMap" type="com.littlebug.bean.Product">
        <result column="product_id" jdbcType="VARCHAR" property="productId"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="product_type" jdbcType="VARCHAR" property="productType"/>
        <result column="image" jdbcType="VARCHAR" property="image"/>
        <result column="note" jdbcType="VARCHAR" property="note"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
    </resultMap>

    <resultMap id="customMap" type="com.littlebug.bean.Custom">
        <result column="custom_id" jdbcType="VARCHAR" property="customId"/>
        <result column="custom_name" jdbcType="VARCHAR" property="customName"/>
        <result column="full_name" jdbcType="VARCHAR" property="fullName"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="fax" jdbcType="VARCHAR" property="fax"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="owner_name" jdbcType="VARCHAR" property="ownerName"/>
        <result column="owner_tel" jdbcType="VARCHAR" property="ownerTel"/>
        <result column="status" jdbcType="INTEGER" property="status" />
        <result column="note" jdbcType="VARCHAR" property="note"/>
    </resultMap>


  <sql id="Base_Column_List">
    order_id, custom_id, product_id, order_date, request_date, note, quantity, unit_price, 
    unit, image as order_image, file, status
  </sql>

    <sql id="OrderResultSet">
        order_id, c.custom_id,c.custom_name,c.full_name,c.address,c.fax,c.email,c.owner_name,c.owner_tel,c.status,c.note,
        p.product_id,p.product_name,p.product_type,p.image,p.note,p.status,
        order_date, request_date, o.note, quantity, unit_price,unit, o.image as order_image, file, o.status
    </sql>

    <sql id="ProductResultSet">
        c.custom_id,c.custom_name,c.full_name,c.address,c.fax,c.email,c.owner_name,c.owner_tel,c.status,c.note
    </sql>

    <sql id="CustomResultSet">
        order_date, request_date, o.note, quantity, unit_price,unit, o.image, file, o.status
    </sql>

    <sql id="leftJoinSql">
        c_order o left join custom c on
        o.custom_id = c.custom_id
        left join product p on
        o.product_id = p.product_id
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from c_order
        where order_id = #{orderId,jdbcType=VARCHAR}
    </select>


    <select id="selectByIdLike" resultMap="BaseResultMap">
    select 
    <include refid="OrderResultSet" />
    from
    <include refid="leftJoinSql"/>
    where order_id like #{param1}
    limit #{param2},#{param3}
  </select>


    <select id="selectOrderByProduct" resultMap="BaseResultMap">
        select
        <include refid="OrderResultSet" />
        from
        <include refid="leftJoinSql"/>
        where
        p.product_name = #{param1}
        limit #{param2},#{param3}
    </select>

    <select id="selectOrderByCustom" resultMap="BaseResultMap">
        select
        <include refid="OrderResultSet" />
        from
        <include refid="leftJoinSql"/>
        where
        c.custom_name = #{param1}
        limit #{param2},#{param3}
    </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from c_order
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.littlebug.bean.COrder">
    insert into c_order (order_id, custom_id, product_id, 
      order_date, request_date, note, 
      quantity, unit_price, unit, 
      image, file, status
      )
    values (#{orderId,jdbcType=VARCHAR}, #{customId,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, 
      #{orderDate,jdbcType=TIMESTAMP}, #{requestDate,jdbcType=TIMESTAMP}, #{note,jdbcType=VARCHAR}, 
      #{quantity,jdbcType=INTEGER}, #{unitPrice,jdbcType=DECIMAL}, #{unit,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR}, #{file,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.littlebug.bean.COrder">
    insert into c_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="customId != null">
        custom_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="orderDate != null">
        order_date,
      </if>
      <if test="requestDate != null">
        request_date,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="file != null">
        file,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="customId != null">
        #{customId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="orderDate != null">
        #{orderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="requestDate != null">
        #{requestDate,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="file != null">
        #{file,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.littlebug.bean.COrder">
    update c_order
    <set>
      <if test="customId != null">
        custom_id = #{customId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="orderDate != null">
        order_date = #{orderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="requestDate != null">
        request_date = #{requestDate,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="file != null">
        file = #{file,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.littlebug.bean.COrder">
    update c_order
    set custom_id = #{customId,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=VARCHAR},
      order_date = #{orderDate,jdbcType=TIMESTAMP},
      request_date = #{requestDate,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      unit = #{unit,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      file = #{file,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>

    <select id="findOrderByIndexs" resultMap="BaseResultMap">
        select
        order_id, c.custom_id,c.custom_name,c.full_name,c.address,c.fax,c.email,c.owner_name,c.owner_tel,c.status,c.note,
        p.product_id,p.product_name,p.product_type,p.image,p.note,p.status,
        order_date, request_date, o.note, quantity, unit_price,unit, o.image as order_image, file, o.status
        from c_order o left join custom c on
        o.custom_id = c.custom_id
        left join product p on
        o.product_id = p.product_id
        limit
        #{start},#{end}
    </select>

    <!--<select id="findOrderByIndexs2" resultMap="BaseResultMap">-->
        <!--select -->
    <!--</select>-->

    <select id="showAllOrders" resultMap="BaseResultMap">
        select <include refid="OrderResultSet"/>
         from c_order
    </select>



</mapper>