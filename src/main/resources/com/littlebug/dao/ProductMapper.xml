<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.littlebug.dao.ProductMapper">
  <resultMap id="BaseResultMap" type="com.littlebug.bean.Product">
    <id column="product_id" jdbcType="VARCHAR" property="productId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_type" jdbcType="VARCHAR" property="productType" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    product_id, product_name, product_type, image, note, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where product_id = #{productId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from product
    where product_id = #{productId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.littlebug.bean.Product">
    insert into product (product_id, product_name, product_type, 
      image, note, status
      )
    values (#{productId,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, #{productType,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.littlebug.bean.Product">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="productType != null">
        product_type,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productType != null">
        #{productType,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.littlebug.bean.Product">
    update product
    <set>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productType != null">
        product_type = #{productType,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where product_id = #{productId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.littlebug.bean.Product">
    update product
    set product_name = #{productName,jdbcType=VARCHAR},
      product_type = #{productType,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where product_id = #{productId,jdbcType=VARCHAR}
  </update>
    <select id="selectAllProducts" resultMap="BaseResultMap">
        select * from product
    </select>





    <sql id="selectOnConditionSql">
        1 = 1
        <if test="product.productId != null">
            and product_id LIKE CONCAT('%',#{product.productId,jdbcType=VARCHAR},'%')
        </if>
        <if test="product.productName != null">
            and product_name like CONCAT('%',#{product.productName,jdbcType=VARCHAR},'%')
        </if>
        <if test="product.productType != null">
            and product_type like CONCAT('%',#{product.productType,jdbcType=VARCHAR},'%')
        </if>
    </sql>


    <sql id="countOnConditionSql">
        1 = 1
        <if test="product.productId != null">
            and product_id LIKE CONCAT('%',#{product.productId,jdbcType=VARCHAR},'%')
        </if>
        <if test="product.productName != null">
            and product_name like CONCAT('%',#{product.productName,jdbcType=VARCHAR},'%')
        </if>
        <if test="product.productType != null">
            and product_type like CONCAT('%',#{product.productType,jdbcType=VARCHAR},'%')
        </if>
    </sql>


    <select id="countProductOnCondition" resultType="integer">
        select count(product_id) from `product`
        where
        <include refid="countOnConditionSql"/>
    </select>

    <select id="selectProductOnCondition" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from `product`
        where
        <include refid="selectOnConditionSql"/>
        limit #{param2},#{param3}
    </select>

    <select id="countAllProducts" resultType="integer">
        select count(product_id) from `product`
    </select>

    <select id="selectProductsByIndexs" resultMap="BaseResultMap">
        select * from product
        limit #{offset}, #{limit}
    </select>




</mapper>