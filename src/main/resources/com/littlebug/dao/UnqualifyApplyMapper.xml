<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.littlebug.dao.UnqualifyApplyMapper">
  <resultMap id="BaseResultMap" type="com.littlebug.bean.UnqualifyApply">
    <id column="unqualify_apply_id" jdbcType="VARCHAR" property="unqualifyApplyId" />
    <result column="product_id" jdbcType="VARCHAR" property="productId" />
    <result column="unqualify_item" jdbcType="VARCHAR" property="unqualifyItem" />
    <result column="unqualify_count" jdbcType="INTEGER" property="unqualifyCount" />
    <result column="assembly_date" jdbcType="TIMESTAMP" property="assemblyDate" />
    <result column="emp_id" jdbcType="VARCHAR" property="empId" />
    <result column="apply_date" jdbcType="TIMESTAMP" property="applyDate" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Base_Column_List">
    unqualify_apply_id, product_id, unqualify_item, unqualify_count, assembly_date, emp_id, 
    apply_date, note
  </sql>
    <sql id="Base_Column_List_">
    unqualify_apply_id, product_id, unqualify_item, unqualify_count, assembly_date, emp_id,
    apply_date, note
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from unqualify_apply
    where unqualify_apply_id = #{unqualifyApplyId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from unqualify_apply
    where unqualify_apply_id = #{unqualifyApplyId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.littlebug.bean.UnqualifyApply">
    insert into unqualify_apply (unqualify_apply_id, product_id, unqualify_item, 
      unqualify_count, assembly_date, emp_id, 
      apply_date, note)
    values (#{unqualifyApplyId,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, #{unqualifyItem,jdbcType=VARCHAR}, 
      #{unqualifyCount,jdbcType=INTEGER}, #{assemblyDate,jdbcType=TIMESTAMP}, #{empId,jdbcType=VARCHAR}, 
      #{applyDate,jdbcType=TIMESTAMP}, #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.littlebug.bean.UnqualifyApply">
    insert into unqualify_apply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="unqualifyApplyId != null">
        unqualify_apply_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="unqualifyItem != null">
        unqualify_item,
      </if>
      <if test="unqualifyCount != null">
        unqualify_count,
      </if>
      <if test="assemblyDate != null">
        assembly_date,
      </if>
      <if test="empId != null">
        emp_id,
      </if>
      <if test="applyDate != null">
        apply_date,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="unqualifyApplyId != null">
        #{unqualifyApplyId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="unqualifyItem != null">
        #{unqualifyItem,jdbcType=VARCHAR},
      </if>
      <if test="unqualifyCount != null">
        #{unqualifyCount,jdbcType=INTEGER},
      </if>
      <if test="assemblyDate != null">
        #{assemblyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=VARCHAR},
      </if>
      <if test="applyDate != null">
        #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.littlebug.bean.UnqualifyApply">
    update unqualify_apply
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="unqualifyItem != null">
        unqualify_item = #{unqualifyItem,jdbcType=VARCHAR},
      </if>
      <if test="unqualifyCount != null">
        unqualify_count = #{unqualifyCount,jdbcType=INTEGER},
      </if>
      <if test="assemblyDate != null">
        assembly_date = #{assemblyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=VARCHAR},
      </if>
      <if test="applyDate != null">
        apply_date = #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where unqualify_apply_id = #{unqualifyApplyId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.littlebug.bean.UnqualifyApply">
    update unqualify_apply
    set product_id = #{productId,jdbcType=VARCHAR},
      unqualify_item = #{unqualifyItem,jdbcType=VARCHAR},
      unqualify_count = #{unqualifyCount,jdbcType=INTEGER},
      assembly_date = #{assemblyDate,jdbcType=TIMESTAMP},
      emp_id = #{empId,jdbcType=VARCHAR},
      apply_date = #{applyDate,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=VARCHAR}
    where unqualify_apply_id = #{unqualifyApplyId,jdbcType=VARCHAR}
  </update>


  <sql id="UnqualifyApply_As_u">
    u.unqualify_apply_id, u.product_id as uproduct_id, u.unqualify_item, u.unqualify_count, u.assembly_date, u.emp_id,
    u.apply_date, u.note as unote
  </sql>
  <sql id="Product_As_p">
    p.product_id, p.product_name, p.product_type, p.image, p.note, p.status
  </sql>
<sql id="LimitAndOffset">
  limit #{limit} offset #{offset}
</sql>

    <resultMap id="ProductName" type="string">
      <result column="product_name" jdbcType="VARCHAR" property="productName" />
    </resultMap>
  <resultMap id="EmpName" type="string">
    <result column="e.emp_name" jdbcType="VARCHAR" property="empName" />
  </resultMap>
    <resultMap id="BaseAndProductName" type="com.littlebug.bean.UnqualifyApply">
        <id column="unqualify_apply_id" jdbcType="VARCHAR" property="unqualifyApplyId" />
        <result column="uproduct_id" jdbcType="VARCHAR" property="productId" />
        <result column="unqualify_item" jdbcType="VARCHAR" property="unqualifyItem" />
        <result column="unqualify_count" jdbcType="INTEGER" property="unqualifyCount" />
        <result column="assembly_date" jdbcType="TIMESTAMP" property="assemblyDate" />
        <result column="emp_id" jdbcType="VARCHAR" property="empId" />
        <result column="apply_date" jdbcType="TIMESTAMP" property="applyDate" />
        <result column="unote" jdbcType="VARCHAR" property="note" />
        <association property="productName" jdbcType="VARCHAR" javaType="string" resultMap="ProductName" />
        <association property="empName" jdbcType="VARCHAR" javaType="string" resultMap="EmpName"/>
    </resultMap>

  <!--分页查询质量监控-不合格品管理-->
  <select id="selectPagination" resultMap="BaseAndProductName">
    select
      <include refid="UnqualifyApply_As_u"/> ,
    product_name,
    e.emp_name
     from unqualify_apply u
    LEFT JOIN product p on u.product_id = p.product_id
    LEFT JOIN employee e 	on e.emp_id = u.emp_id
    <include refid="LimitAndOffset"/>
    ;
  </select>
</mapper>